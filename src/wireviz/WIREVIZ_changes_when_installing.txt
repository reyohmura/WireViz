in Harness.py

def output(self, filename, directory='_output', view=False, cleanup=True, fmt='pdf', gen_bom=False):
        # graphical output
        graph = self.create_graph()
        for f in fmt:
            graph.format = f
            graph.render(filename=filename, directory=directory, view=view, cleanup=cleanup)
        graph.save(filename=f'{filename}.gv', directory=directory)
        # bom output
        bom_list = self.bom_list()
        with open(f'{filename}.bom.tsv', 'w',encoding='utf-8_sig') as file:##HERE
            file.write(tuplelist2tsv(bom_list))
        # HTML output
        with open(f'{filename}.html', 'w',encoding='utf-8_sig') as file:##HERE
            file.write('<html><body style="font-family:Arial">')

            file.write('<h1>Diagram</h1>')
            with open(f'{filename}.svg',encoding='utf-8_sig') as svg:##HERE
                for svgdata in svg:
                    file.write(svgdata)

            file.write('<h1>Bill of Materials</h1>')
            listy = flatten2d(bom_list)
            file.write('<table style="border:1px solid #000000; font-size: 14pt; border-spacing: 0px">')
            file.write('<tr>')
            for item in listy[0]:
                file.write(f'<th align="left" style="border:1px solid #000000; padding: 8px">{item}</th>')
            file.write('</tr>')
            for row in listy[1:]:
                file.write('<tr>')
                for i, item in enumerate(row):
                    align = 'align="right"' if listy[0][i] == 'Qty' else ''
                    file.write(f'<td {align} style="border:1px solid #000000; padding: 4px">{item}</td>')
                file.write('</tr>')
            file.write('</table>')

            file.write('</body></html>')

in line 130,314,288,317 change units m to mm

in line 192 add following
        yaml_input = yaml_input.decode('utf-8')


in wireviz.py in main
    with open(args.input_file,encoding="utf-8") as fh:
        yaml_input = fh.read()

